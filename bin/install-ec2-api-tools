#!/usr/bin/env bash
# 
# install ec2-api-tools for ubuntu (tested on saucy 13.10)
#

# require root
if [ "$(id -u)" != "0" ]; then
  echo "this script must be run as root" >&2
  exit 1
fi

set -e

# default
prefix=${prefix:-/usr/local}

# dirname
dest=$prefix/ec2-api-tools

# get id/secret if connected to a terminal
if [ -t 0 ]; then
  echo -n "enter your AWS_ACCESS_KEY: "
  read -a key
  echo -n "enter your AWS_SECRET_KEY: "
  read -a secret
fi

# deps
apt-get -y install openjdk-7-jre
apt-get -y install unzip

# dirs
mkdir -p "$dest"/archives
mkdir -p "$dest"/builds

# workspace
cd "$dest"
tmp=$(mktemp -d tmp.XXX)
cd "$tmp"

# download
curl -fLO# http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip

# unpack
unzip ec2-api-tools.zip

# cache archive
mv -f ec2-api-tools.zip ../archives

# rename build to plain version number
version="$(ls | sed s/.*-//)"
mv -f "$(ls)" ../builds/"$version"

# clean up
cd ..
rm -rf "$tmp"

# remember some locations
build="$dest"/builds/"$version"
etc="$build"/etc

# global env vars
EC2_HOME="EC2_HOME=\"$build\""
sed -i 's/^EC2_HOME=.*/'"$EC2_HOME"'/' /etc/environment || echo "$EC2_HOME" | tee -a /etc/environment

JAVA_HOME="JAVA_HOME=\"$(readlink -f /usr/bin/java | sed "s:bin/java::")\""
sed -i 's/^JAVA_HOME=.*/'"$JAVA_HOME"'/' /etc/environment || echo "$JAVA_HOME" | tee -a /etc/environment

AWS_ACCESS_KEY="AWS_ACCESS_KEY=\"$key\""
sed -i 's/^AWS_ACCESS_KEY=.*/'"$AWS_ACCESS_KEY"'/' /etc/environment || echo "$AWS_ACCESS_KEY" | tee -a /etc/environment

AWS_SECRET_KEY="AWS_ACCESS_KEY=\"$secret\""
sed -i 's/^AWS_SECRET_KEY=.*/'"$AWS_SECRET_KEY"'/' /etc/environment || echo "$AWS_SECRET_KEY" | tee -a /etc/environment

# link into "$prefix"/bin
cd "$build"/bin
for b in $(ls -A | grep -v '.*\.cmd$'); do
  ln -sf "$build"/bin/"$b" "$prefix"/bin/
done

echo 'please reload your shell'
