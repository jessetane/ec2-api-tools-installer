#!/usr/bin/env bash
# 
# install ec2-api-tools for ubuntu (tested on saucy 13.10)
#

# stay safe
set -e

# default
prefix=${prefix:-/usr/local}

# dirname
ec2home=$prefix/ec2-api-tools

# get id/secret if connected to a terminal
if [ -t 0 ]; then
  echo -n "enter your AWS_ACCESS_KEY: "
  read -a key
  echo -n "enter your AWS_SECRET_KEY: "
  read -a secret
fi

# deps
sudo apt-get -y install openjdk-7-jre
sudo apt-get -y install unzip

# dirs
mkdir -p "$ec2home"/archives
mkdir -p "$ec2home"/builds

# workspace
cd "$ec2home"
tmp=$(mktemp -d tmp.XXX)
cd "$tmp"

# download
curl -fLO# http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip

# unpack
unzip ec2-api-tools.zip

# cache archive
mv ec2-api-tools.zip ../archives

# rename build to plain version number
version="$(ls | sed s/.*-//)"
mv "$(ls)" ../builds/"$version"

# clean up
cd ..
rm -rf "$tmp"

# remember some locations
build="$ec2home"/builds/"$version"
etc="$build"/etc

# find annoying java
java_home="$(readlink -f /usr/bin/java | sed "s:bin/java::")"

# global env
echo 'EC2_HOME="'"$build"'"' | sudo tee -a /etc/environment
echo 'JAVA_HOME="'"$java_home"'"' | sudo tee -a /etc/environment
echo 'AWS_ACCESS_KEY="'"$key"'"' | sudo tee -a /etc/environment
echo 'AWS_SECRET_KEY="'"$secret"'"' | sudo tee -a /etc/environment

# link into "$prefix"/bin
cd "$build"/bin
for b in $(ls -A "$build"/bin/!(*.cmd)); do
  ln -sf "$build"/bin/"$b" "$prefix"/bin/
done

echo 'please reload your shell'
